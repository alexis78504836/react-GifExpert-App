{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GIFExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","obj","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","img","GIFExpertApp","categorias","setCategorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"yMAmCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,uDACJ,mCADI,cAEqDC,UAAUH,GAF/D,sBAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVxB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACnC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAMA,EAAN,WCACO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAO,GACPa,SAAU,IAHwB,mBAC/BC,EAD+B,KACxBC,EADwB,KAqBtC,OAfAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAIb,IAEKC,EDjB2BM,CAAa3B,GAAjCa,EAFqB,EAE3BN,KAAca,EAFa,EAEbA,QAStB,OACI,qCACI,mCAAMpB,EAAN,OACCoB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SAEKH,EAAOJ,KAAK,SAAAmB,GACA,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aES3CkB,EA7BM,WAAO,IAAD,EACa3C,mBAAS,CAAC,cADvB,mBAChB4C,EADgB,KACJC,EADI,KASnB,OACA,qCACI,gDAEA,cAAC,EAAD,CAAa9C,cAAe8C,IAC5B,uBACA,6BAEQD,EAAWrB,KAAK,SAAAuB,GACZ,OAAO,cAAC,EAAD,CACHhC,SAAUgC,GACLA,Y,MCnBjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.018eaed4.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(obj => [inputValue,...obj]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n    const apiKey = 'BKLB9U3Ks7zEUgzr3fzeDBoDdnPFCKHq';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(category)}&limit=10`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map( gif => {\r\n        return {\r\n            id : gif.id,\r\n            title : gif.title,\r\n            url : gif.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}></img>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import {getGifs} from '../Helpers/getGifs'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    // const[images,setImages] = useState([]);\r\n\r\n    // useEffect(() =>{\r\n    //     getGifs(category).then(setImages);\r\n    // },[category]);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                 {\r\n                 images.map( img =>{\r\n                             return <GifGridItem key={img.id} {...img}/>\r\n                         })\r\n                 }\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../Helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading : true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 3000);\r\n\r\n                \r\n            });\r\n    },[]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './Components/AddCategory';\r\nimport {GifGrid} from './Components/GifGrid'\r\n\r\nconst GIFExpertApp = () => {\r\n    const [categorias, setCategorias] = useState(['One Punch']);    \r\n\r\n    // const handleAdd = (e) => {\r\n    //     const catAuxiliar = [...categorias,'Hola']\r\n    //     setCategorias(catAuxiliar);\r\n    //     console.log(categorias.length);\r\n    // };\r\n\r\n        return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            \r\n            <AddCategory setCategories={setCategorias}></AddCategory>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categorias.map( categoria => {\r\n                        return <GifGrid \r\n                            category={categoria}\r\n                            key={categoria}\r\n                            />;\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n        );\r\n};\r\n\r\nexport default GIFExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GIFExpertApp from \"./GIFExpertApp\";\nimport './index.css';\n\nReactDOM.render(\n    <GIFExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}